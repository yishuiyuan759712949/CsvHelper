{"template":"__react_static_root__/src/pages/documentation","sharedHashesByProp":{},"data":{"className":"/streams","data":"# Streams\r\n\r\nWhen reading from a stream, if you need to go back to the beginning of the stream, you can use the `Stream.Position` property.\r\n\r\n```cs\r\nusing (var stream = new File.OpenRead(\"path\\\\to\\\\file\"))\r\nusing (var reader = new StreamReader(stream))\r\n{\t\r\n\t// Read file content.\r\n\tvar content = reader.ReadToEnd();\r\n\r\n\t// Go back to beginning of the stream.\r\n\tstream.Position = 0;\r\n\r\n\t// Read file content again.\r\n\tcontent = reader.ReadToEnd();\r\n}\r\n```\r\n\r\nWhen writing to a file, you need to flush the writer for the data to be written to the stream. `StreamWriter` contains an internal buffer and the data is only written to the stream when the buffer is full, or `Flush` is called. `Flush` is automatically called when a `using` block exits.\r\n\r\n```cs\r\nusing (var stream = new File.OpenWrite(\"path\\\\to\\\\file\"))\r\nusing (var writer = new StreamWriter(stream))\r\n{\t\r\n\twriter.WriteLine(\"Foo\");\r\n\twriter.Flush(); // Data is written from the writer buffer to the stream.\r\n} // Flush is also called here.\r\n```\r\n","toc":{"title":"Examples","path":"examples","children":[{"title":"Prerequisites","path":"examples/prerequisites","children":[{"title":"Using and Dispose","path":"examples/prerequisites/using-dispose"},{"title":"Reading and Writing Files","path":"examples/prerequisites/reading-writing-files"},{"title":"Streams","path":"examples/prerequisites/streams"}]},{"title":"Reading","path":"examples/reading","children":[{"title":"Get Class Records","path":"examples/reading/get-class-records"},{"title":"Get Dynamic Records","path":"examples/reading/get-dynamic-records"},{"title":"Get Anonymous Type Records","path":"examples/reading/get-anonymous-type-records"},{"title":"Enumerate Class Records","path":"examples/reading/enumerate-class-records"},{"title":"Reading by Hand","path":"examples/reading/reading-by-hand"},{"title":"Reading Multiple Data Sets","path":"examples/reading/reading-multiple-data-sets"},{"title":"Reading Multiple Record Types","path":"examples/reading/reading-multiple-record-types"}]},{"title":"Writing","path":"examples/writing","children":[{"title":"Write Class Objects","path":"examples/writing/write-class-objects"},{"title":"Write Dynamic Objects","path":"examples/writing/write-dynamic-objects"},{"title":"Write Anonymous Type Objects","path":"examples/writing/write-anonymous-type-objects"}]},{"title":"Configuration","path":"examples/configuration","children":[{"title":"Class Maps","path":"examples/configuration/class-maps","children":[{"title":"Mapping Properties","path":"examples/configuration/class-maps/mapping-properties"},{"title":"Mapping by Name","path":"examples/configuration/class-maps/mapping-by-name"},{"title":"Mapping by Alternate Names","path":"examples/configuration/class-maps/mapping-by-alternate-names"},{"title":"Mapping Duplicate Names","path":"examples/configuration/class-maps/mapping-duplicate-names"},{"title":"Mapping by Index","path":"examples/configuration/class-maps/mapping-by-index"},{"title":"Auto Mapping","path":"examples/configuration/class-maps/auto-mapping"},{"title":"Ignoring Properties","path":"examples/configuration/class-maps/ignoring-properties"},{"title":"Constant Value","path":"examples/configuration/class-maps/constant-value"},{"title":"Type Conversion","path":"examples/configuration/class-maps/type-conversion"},{"title":"Inline Type Conversion","path":"examples/configuration/class-maps/inline-type-conversion"},{"title":"Optional Maps","path":"examples/configuration/class-maps/optional-maps"},{"title":"Validation","path":"examples/configuration/class-maps/validation"}]},{"title":"Attributes","path":"examples/configuration/attributes"}]},{"title":"Type Conversion","path":"examples/type-conversion"},{"title":"DataTable","path":"examples/data-table"}]}},"path":"examples/prerequisites/streams"}

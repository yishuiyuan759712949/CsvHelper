{"template":"__react_static_root__/src/pages/documentation","sharedHashesByProp":{},"data":{"className":"/reading-writing-files","data":"# Reading and Writing Files\r\n\r\nTo open a file for reading or writing, we can use `System.IO.File`.\r\n\r\n```cs\r\nusing (var stream = File.OpenRead(\"path\\\\to\\\\file.csv\"))\r\n{\r\n}\r\n\r\nusing (var stream = File.OpenWrite(\"path\\\\to\\\\file.csv\"))\r\n{\t\r\n}\r\n```\r\n\r\nThese both return a `FileStream` for working with our file. Since our data is text, we will need to use a `StreamReader` and `StreamWriter` to read and write the text.\r\n\r\n```cs\r\nusing (var stream = File.OpenRead(\"path\\\\to\\\\file.csv\"))\r\nusing (var reader = new StreamReader(stream))\r\n{\r\n}\r\n\r\nusing (var stream = File.OpenWrite(\"path\\\\to\\\\file.csv\"))\r\nusing (var writer = new StreamWriter(stream))\r\n{\t\r\n}\r\n```\r\n\r\n`StreamReader` and `StreamWriter` have shortcuts for doing this.\r\n\r\n```cs\r\nusing (var reader = new StreamReader(\"path\\\\to\\\\file.csv\"))\r\n{\r\n}\r\n\r\nusing (var writer = new StreamWriter(\"path\\\\to\\\\file.csv\"))\r\n{\t\r\n}\r\n```\r\n\r\nCsvHelper doesn't know anything about your encoding, so if you have a specific encoding, you'll need to specify that in your stream.\r\n\r\n```cs\r\nusing (var reader = new StreamReader(\"path\\\\to\\\\file.csv\"), Encoding.UTF8)\r\n{\r\n}\r\n\r\nusing (var writer = new StreamWriter(\"path\\\\to\\\\file.csv\"), Encoding.UTF8)\r\n{\t\r\n}\r\n```\r\n\r\n`CsvReader` and `CsvWriter` take a `TextReader` and `TextWriter` in their constructors. `TextReader` and `TextWriter` are `abstract` classes for reading and writing text. `StreamReader` inherits `TextReader` and `StreamWriter` inherits `TextWriter`, so we can use those with `CsvReader` and `CsvWriter`.\r\n\r\n```cs\r\nusing (var reader = new StreamReader(\"path\\\\to\\\\file.csv\"))\r\nusing (var csv = new CsvReader(reader))\r\n{\r\n}\r\n\r\nusing (var writer = new StreamWriter(\"path\\\\to\\\\file.csv\"))\r\nusing (var csv = new CsvWriter(writer))\r\n{\t\r\n}\r\n```\r\n","toc":{"title":"Examples","path":"examples","children":[{"title":"Prerequisites","path":"examples/prerequisites","children":[{"title":"Using and Dispose","path":"examples/prerequisites/using-dispose"},{"title":"Reading and Writing Files","path":"examples/prerequisites/reading-writing-files"},{"title":"Streams","path":"examples/prerequisites/streams"}]},{"title":"Reading","path":"examples/reading","children":[{"title":"Get Class Records","path":"examples/reading/get-class-records"},{"title":"Get Dynamic Records","path":"examples/reading/get-dynamic-records"},{"title":"Get Anonymous Type Records","path":"examples/reading/get-anonymous-type-records"},{"title":"Enumerate Class Records","path":"examples/reading/enumerate-class-records"},{"title":"Reading by Hand","path":"examples/reading/reading-by-hand"},{"title":"Reading Multiple Data Sets","path":"examples/reading/reading-multiple-data-sets"},{"title":"Reading Multiple Record Types","path":"examples/reading/reading-multiple-record-types"}]},{"title":"Writing","path":"examples/writing","children":[{"title":"Write Class Objects","path":"examples/writing/write-class-objects"},{"title":"Write Dynamic Objects","path":"examples/writing/write-dynamic-objects"},{"title":"Write Anonymous Type Objects","path":"examples/writing/write-anonymous-type-objects"}]},{"title":"Configuration","path":"examples/configuration","children":[{"title":"Class Maps","path":"examples/configuration/class-maps","children":[{"title":"Mapping Properties","path":"examples/configuration/class-maps/mapping-properties"},{"title":"Mapping by Name","path":"examples/configuration/class-maps/mapping-by-name"},{"title":"Mapping by Alternate Names","path":"examples/configuration/class-maps/mapping-by-alternate-names"},{"title":"Mapping Duplicate Names","path":"examples/configuration/class-maps/mapping-duplicate-names"},{"title":"Mapping by Index","path":"examples/configuration/class-maps/mapping-by-index"},{"title":"Auto Mapping","path":"examples/configuration/class-maps/auto-mapping"},{"title":"Ignoring Properties","path":"examples/configuration/class-maps/ignoring-properties"},{"title":"Constant Value","path":"examples/configuration/class-maps/constant-value"},{"title":"Type Conversion","path":"examples/configuration/class-maps/type-conversion"},{"title":"Inline Type Conversion","path":"examples/configuration/class-maps/inline-type-conversion"},{"title":"Optional Maps","path":"examples/configuration/class-maps/optional-maps"},{"title":"Validation","path":"examples/configuration/class-maps/validation"}]},{"title":"Attributes","path":"examples/configuration/attributes"}]},{"title":"Type Conversion","path":"examples/type-conversion"},{"title":"DataTable","path":"examples/data-table"}]}},"path":"examples/prerequisites/reading-writing-files"}

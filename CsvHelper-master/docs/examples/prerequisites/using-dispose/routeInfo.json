{"template":"__react_static_root__/src/pages/documentation","sharedHashesByProp":{},"data":{"className":"/using-dispose","data":"# Using and Dispose\r\n\r\nWhenever you have an object the implements `IDisposable`, you need to dispose of the resource when you're done with it. Most classes that use unmanaged resources will implement `IDisposable`. This means a lot of classes in the `System.IO` namespace will need to be disposed of.\r\n\r\nThe best practice to dispose of an object when you're done with it is to wrap the code in a `using` block. When the `using` block exits, the resource will automatically be disposed of as soon as possible.\r\n\r\n```cs\r\nusing (var stream = new MemoryStream())\r\n{\r\n\t// Use the stream.\r\n}\r\n// The stream will be disposed of as soon as possible.\r\n```\r\n\r\nIf you need to keep keep it around for a while and dispose of it later, `using` does some error handling for you, so it's still a good idea to use it instead of calling `Dispose` directly. There is some debate on whether this is a good idea because it doesn't show intent.\r\n\r\n```cs\r\nvar stream = new MemoryStream();\r\n// Later in a different part of your code.\r\nusing (stream) { }\r\n```\r\n","toc":{"title":"Examples","path":"examples","children":[{"title":"Prerequisites","path":"examples/prerequisites","children":[{"title":"Using and Dispose","path":"examples/prerequisites/using-dispose"},{"title":"Reading and Writing Files","path":"examples/prerequisites/reading-writing-files"},{"title":"Streams","path":"examples/prerequisites/streams"}]},{"title":"Reading","path":"examples/reading","children":[{"title":"Get Class Records","path":"examples/reading/get-class-records"},{"title":"Get Dynamic Records","path":"examples/reading/get-dynamic-records"},{"title":"Get Anonymous Type Records","path":"examples/reading/get-anonymous-type-records"},{"title":"Enumerate Class Records","path":"examples/reading/enumerate-class-records"},{"title":"Reading by Hand","path":"examples/reading/reading-by-hand"},{"title":"Reading Multiple Data Sets","path":"examples/reading/reading-multiple-data-sets"},{"title":"Reading Multiple Record Types","path":"examples/reading/reading-multiple-record-types"}]},{"title":"Writing","path":"examples/writing","children":[{"title":"Write Class Objects","path":"examples/writing/write-class-objects"},{"title":"Write Dynamic Objects","path":"examples/writing/write-dynamic-objects"},{"title":"Write Anonymous Type Objects","path":"examples/writing/write-anonymous-type-objects"}]},{"title":"Configuration","path":"examples/configuration","children":[{"title":"Class Maps","path":"examples/configuration/class-maps","children":[{"title":"Mapping Properties","path":"examples/configuration/class-maps/mapping-properties"},{"title":"Mapping by Name","path":"examples/configuration/class-maps/mapping-by-name"},{"title":"Mapping by Alternate Names","path":"examples/configuration/class-maps/mapping-by-alternate-names"},{"title":"Mapping Duplicate Names","path":"examples/configuration/class-maps/mapping-duplicate-names"},{"title":"Mapping by Index","path":"examples/configuration/class-maps/mapping-by-index"},{"title":"Auto Mapping","path":"examples/configuration/class-maps/auto-mapping"},{"title":"Ignoring Properties","path":"examples/configuration/class-maps/ignoring-properties"},{"title":"Constant Value","path":"examples/configuration/class-maps/constant-value"},{"title":"Type Conversion","path":"examples/configuration/class-maps/type-conversion"},{"title":"Inline Type Conversion","path":"examples/configuration/class-maps/inline-type-conversion"},{"title":"Optional Maps","path":"examples/configuration/class-maps/optional-maps"},{"title":"Validation","path":"examples/configuration/class-maps/validation"}]},{"title":"Attributes","path":"examples/configuration/attributes"}]},{"title":"Type Conversion","path":"examples/type-conversion"},{"title":"DataTable","path":"examples/data-table"}]}},"path":"examples/prerequisites/using-dispose"}

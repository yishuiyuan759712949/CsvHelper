{"template":"__react_static_root__/src/pages/documentation","sharedHashesByProp":{},"data":{"className":"/reading-multiple-record-types","data":"# Reading Multiple Record Types\r\n\r\nIf you have CSV data where each row may be a different record type, you should be able to read based on a row type or something similar.\r\n\r\n###### Data\r\n\r\n```\r\nA,1,foo\r\nB,07a0fca2-1b1c-4e44-b1be-c2b05da5afc7,bar\r\n```\r\n\r\n###### Example\r\n\r\n```cs\r\nvoid Main()\r\n{\r\n    using (var reader = new StreamReader(\"path\\\\to\\\\file.csv\"))\r\n    using (var csv = new CsvReader(reader, CultureInfo.InvariantCulture))\r\n    {\r\n\t\tcsv.Configuration.HasHeaderRecord = false;\r\n\t\tcsv.Configuration.RegisterClassMap<FooMap>();\r\n\t\tcsv.Configuration.RegisterClassMap<BarMap>();\r\n\t\tvar fooRecords = new List<Foo>();\r\n\t\tvar barRecords = new List<Bar>();\r\n\t\twhile (csv.Read())\r\n\t\t{\r\n\t\t\tswitch (csv.GetField(0))\r\n\t\t\t{\r\n\t\t\t\tcase \"A\":\r\n\t\t\t\t\tfooRecords.Add(csv.GetRecord<Foo>());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"B\":\r\n\t\t\t\t\tbarRecords.Add(csv.GetRecord<Bar>());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new InvalidOperationException(\"Unknown record type.\");\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n}\r\n\r\npublic class Foo\r\n{\r\n    public int Id { get; set; }\r\n    public string Name { get; set; }\r\n}\r\n\r\npublic class Bar\r\n{\r\n\tpublic Guid Id { get; set; }\r\n\tpublic string Name { get; set; }\r\n}\r\n\r\npublic sealed class FooMap : ClassMap<Foo>\r\n{\r\n\tpublic FooMap()\r\n\t{\r\n\t\tMap(m => m.Id).Index(1);\r\n\t\tMap(m => m.Name).Index(2);\r\n\t}\r\n}\r\n\r\npublic sealed class BarMap : ClassMap<Bar>\r\n{\r\n\tpublic BarMap()\r\n\t{\r\n\t\tMap(m => m.Id).Index(1);\r\n\t\tMap(m => m.Name).Index(2);\r\n\t}\r\n}\r\n```\r\n","toc":{"title":"Examples","path":"examples","children":[{"title":"Prerequisites","path":"examples/prerequisites","children":[{"title":"Using and Dispose","path":"examples/prerequisites/using-dispose"},{"title":"Reading and Writing Files","path":"examples/prerequisites/reading-writing-files"},{"title":"Streams","path":"examples/prerequisites/streams"}]},{"title":"Reading","path":"examples/reading","children":[{"title":"Get Class Records","path":"examples/reading/get-class-records"},{"title":"Get Dynamic Records","path":"examples/reading/get-dynamic-records"},{"title":"Get Anonymous Type Records","path":"examples/reading/get-anonymous-type-records"},{"title":"Enumerate Class Records","path":"examples/reading/enumerate-class-records"},{"title":"Reading by Hand","path":"examples/reading/reading-by-hand"},{"title":"Reading Multiple Data Sets","path":"examples/reading/reading-multiple-data-sets"},{"title":"Reading Multiple Record Types","path":"examples/reading/reading-multiple-record-types"}]},{"title":"Writing","path":"examples/writing","children":[{"title":"Write Class Objects","path":"examples/writing/write-class-objects"},{"title":"Write Dynamic Objects","path":"examples/writing/write-dynamic-objects"},{"title":"Write Anonymous Type Objects","path":"examples/writing/write-anonymous-type-objects"}]},{"title":"Configuration","path":"examples/configuration","children":[{"title":"Class Maps","path":"examples/configuration/class-maps","children":[{"title":"Mapping Properties","path":"examples/configuration/class-maps/mapping-properties"},{"title":"Mapping by Name","path":"examples/configuration/class-maps/mapping-by-name"},{"title":"Mapping by Alternate Names","path":"examples/configuration/class-maps/mapping-by-alternate-names"},{"title":"Mapping Duplicate Names","path":"examples/configuration/class-maps/mapping-duplicate-names"},{"title":"Mapping by Index","path":"examples/configuration/class-maps/mapping-by-index"},{"title":"Auto Mapping","path":"examples/configuration/class-maps/auto-mapping"},{"title":"Ignoring Properties","path":"examples/configuration/class-maps/ignoring-properties"},{"title":"Constant Value","path":"examples/configuration/class-maps/constant-value"},{"title":"Type Conversion","path":"examples/configuration/class-maps/type-conversion"},{"title":"Inline Type Conversion","path":"examples/configuration/class-maps/inline-type-conversion"},{"title":"Optional Maps","path":"examples/configuration/class-maps/optional-maps"},{"title":"Validation","path":"examples/configuration/class-maps/validation"}]},{"title":"Attributes","path":"examples/configuration/attributes"}]},{"title":"Type Conversion","path":"examples/type-conversion"},{"title":"DataTable","path":"examples/data-table"}]}},"path":"examples/reading/reading-multiple-record-types"}
